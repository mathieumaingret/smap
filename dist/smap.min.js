!function(i){"use strict";i.SmapMarker=function(t,e){return this.options={},i.extend(!0,this.options,i.SmapMarker.defaults,t),this.layer=void 0,this.icon=void 0,this.iconInterface=e,this.popup=void 0,this.prepareOptions()&&this.init(),this},i.SmapMarker.defaults={position:void 0,customIcon:!0,icon:{html:void 0,data:{id:void 0},iconSize:[50,50],iconAnchor:[],popupAnchor:[]},popup:void 0,popupOptions:void 0,centerOnFocus:!0,sourceContainer:void 0,sourceContainerEvent:"mouseenter focus",sourceContainerSelector:".js-map-trigger",cluster:void 0,data:{},classes:{prefix:"smap-marker",layer:"{prefix}--default",focused:"is-focused",active:"is-active"}},i.SmapMarker.prototype={prepareOptions:function(){var o=this;return"undefined"==typeof L?(i.Smap.prototype.setLog('"L" function from Leaflet is undefined.',"error"),!1):void 0===o.options.position||"object"!=typeof o.options.position?(i.Smap.prototype.setLog("Missing required position parameter as array.","error"),!1):(0===o.options.icon.iconAnchor.length&&(o.options.icon.iconAnchor=[Math.floor(o.options.icon.iconSize[0]/2),o.options.icon.iconSize[1]]),0===o.options.icon.popupAnchor.length&&(o.options.icon.popupAnchor=[0,-Math.floor(o.options.icon.iconSize[1]/1.5)]),i.each(o.options.classes,function(t,e){"string"==typeof e&&(o.options.classes[t]=e.replace(/{prefix}/,o.options.classes.prefix)),o.options.icon.className=o.options.classes.prefix+" "+o.options.classes.layer}),!0)},init:function(){var t,e,o=this,s={};return!0===o.options.customIcon&&(o.icon=new o.iconInterface(o.options.icon),s.icon=o.icon),s.smap_init_options=o.options,o.layer=L.marker(o.options.position,s),o.layer.layerType="marker",!0===o.options.customIcon&&void 0!==o.options.icon.html&&o.getContainer().html(o.options.icon.html),void 0!==o.options.popup&&(o.popup=new i.SmapPopup(o.getLayer(),o.options,o.options.popupOptions)),o.getLayer().on({click:function(){!0===o.options.centerOnFocus&&o.map().setView(o.getLayer().getLatLng())},mouseover:function(){o.getContainer().addClass(o.options.classes.focused)},mouseout:function(){o.getContainer().removeClass(o.options.classes.focused)},popupopen:function(){o.getContainer().addClass(o.options.classes.active),void 0!==o.options.sourceContainer&&o.options.sourceContainer.addClass(o.options.classes.active)},popupclose:function(){o.getContainer().removeClass(o.options.classes.active),void 0!==o.options.sourceContainer&&o.options.sourceContainer.removeClass(o.options.classes.active)}}),void 0!==o.options.sourceContainer&&!0===o.options.centerOnFocus&&void 0!==o.options.cluster&&(t=void 0,e=function(){o.options.cluster.zoomToShowLayer(o.getLayer(),function(){void 0!==o.popup&&o.popup.getLayer().openPopup()})},s=o.options.sourceContainerEvent.split(" ").join(".smapsourceinteraction ")+".smapsourceinteraction",o.options.sourceContainer.on(s,o.options.sourceContainerSelector,function(){"click"!==o.options.sourceContainerEvent?(void 0!==t&&clearTimeout(t),t=setTimeout(function(){e()},600)):e()}),o.options.sourceContainer.on("mouseleave.smapsourceinteraction",o.options.sourceContainerSelector,function(){void 0!==t&&clearTimeout(t)})),void 0!==o.options.events&&i.each(o.options.events,function(t,e){o.getLayer().on(t,e)}),this},getPosition:function(){return this.options.position},getLatLng:function(){return this.getLayer().getLatLng()},getLayer:function(){return this.layer},getContainer:function(){return i(this.getLayer()._icon)},map:function(){return this.getLayer()._map}}}(jQuery),function(s){"use strict";s.SmapPopup=function(t,e,o){return s.extend(!0,this.options={},s.SmapPopup.defaults,o),this.layer=t,this.layerOptions=e,this.prepareOptions()&&this.init(),this},s.SmapPopup.defaults={showPopup:!1,classes:{prefix:"smap-popup",layer:"{prefix}--default"},attributes:{}},s.SmapPopup.prototype={prepareOptions:function(){var o=this;return"undefined"==typeof L?(s.Smap.prototype.setLog('"L" function from Leaflet is undefined.',"error"),!1):(s.each(o.options.classes,function(t,e){"string"==typeof e&&(o.options.classes[t]=e.replace(/{prefix}/,o.options.classes.prefix)),o.options.className=o.options.classes.prefix+" "+o.options.classes.layer}),!0)},init:function(){var t,e=this;return void 0!==e.layerOptions.popup&&(t=e.options.attributes,s.extend(!0,t,{html:e.layerOptions.popup}),t.class+=" "+e.options.classes.prefix+" "+e.options.classes.layer,t=s("<div>",t),e.getLayer().bindPopup(t.get(0))),e.eventsHandler(),e},eventsHandler:function(){var t=this;return!0===t.options.showPopup&&t.getLayer().openPopup(),void 0!==t.options.sourceContainer&&t.options.sourceContainer.on("click",function(){!0===t.options.centerOnFocus&&void 0!==t.options.cluster&&t.options.cluster.zoomToShowLayer(t.getLayer()),t.getLayer().openPopup()}),t},getLayer:function(){return this.layer},getContainer:function(){if("marker"===this.getLayer().layerType&&void 0!==this.getLayer()._icon)return s(this.getLayer()._icon);if("shape"===this.getLayer().layerType){var o=null;if(s.each(this.getLayer()._layers,function(t,e){return o=e}),void 0!==o._path)return s(o._path)}},map:function(){return this.getLayer()._map}}}(jQuery),function(e){"use strict";e.SmapShape=function(t){return e.extend(!0,this.options={},e.SmapShape.defaults,t),this.layer=void 0,this.popup=void 0,this.prepareOptions()&&this.init(),this},e.SmapShape.defaults={type:"geojson",geometry:void 0,style:{},popup:void 0,showPopup:!1,centerOnFocus:!0,sourceContainer:void 0,classes:{prefix:"smap-shape",layer:"{prefix}--default",focused:"is-focused",active:"is-active"}},e.SmapShape.prototype={prepareOptions:function(){var o=this;return"undefined"==typeof L?(e.Smap.prototype.setLog('"L" function from Leaflet is undefined.',"error"),!1):void 0===o.options.geometry||"object"!=typeof o.options.geometry?(e.Smap.prototype.setLog("Missing required geometry parameter as array.","error"),!1):(e.each(o.options.classes,function(t,e){"string"==typeof e&&(o.options.classes[t]=e.replace(/{prefix}/,o.options.classes.prefix))}),!0)},init:function(){var o=this;return"geojson"===o.options.type&&(o.layer=L.geoJson({type:"Feature",properties:{},geometry:o.options.geometry,smap_init_options:o.options},o.options.style),o.layer.layerType="shape",setTimeout(function(){o.getContainer().addClass(o.options.classes.prefix+" "+o.options.classes.layer)},0)),void 0!==o.options.popup&&(o.popup=new e.SmapPopup(o.getLayer(),o.options,o.options.popupOptions)),o.getLayer().on({click:function(){},mouseover:function(){o.getContainer().addClass(o.options.classes.focused)},mouseout:function(){o.getContainer().removeClass(o.options.classes.focused)},popupopen:function(){o.getContainer().addClass(o.options.classes.active),void 0!==o.options.sourceContainer&&o.options.sourceContainer.addClass(o.options.classes.active)},popupclose:function(){o.getContainer().removeClass(o.options.classes.active),void 0!==o.options.sourceContainer&&o.options.sourceContainer.removeClass(o.options.classes.active)}}),void 0!==o.options.events&&e.each(o.options.events,function(t,e){o.getLayer().on(t,e)}),o},getBounds:function(){return this.getLayer().getBounds()},getLayer:function(){return this.layer},getContainer:function(){var o=null;return e.each(this.getLayer()._layers,function(t,e){return o=e}),null!==o&&void 0!==o._path&&e(o._path)},map:function(){return this.getLayer()._map}}}(jQuery),function(r){"use strict";r.Smap=function(t,e){return this.elements={container:t},this.map=void 0,this.groups={},this.markers={cluster:void 0,iconInterface:void 0},r.extend(!0,this.options={},r.Smap.defaults,e),this.prepareOptions()&&this.init(),this},r.Smap.defaults={map:{center:void 0,zoom:10,minZoom:4,maxZoom:18,zoomPosition:"topright",gestureHandling:!0},boundsOptions:{padding:[30,30]},autoCenter:!0,tileLayer:void 0,enableClusters:!0,clusterOptions:{}},r.Smap.prototype={prepareOptions:function(){return"undefined"==typeof L?(this.setLog('"L" function from Leaflet is undefined.',"error"),!1):0===this.elements.container.length?(this.setLog("Map container not found.","error"),!1):void 0===this.elements.container.attr("id")?(this.setLog('Map container must have an "id" attribute.',"error"),!1):void 0===this.options.map.center||"object"!=typeof this.options.map.center?(this.setLog("Missing required center parameter as array.","error"),!1):(void 0===this.options.tileLayer&&(this.options.tileLayer=L.tileLayer("https://cartodb-basemaps-{s}.global.ssl.fastly.net/rastertiles/voyager/{z}/{x}/{y}{r}.png",{attribution:'&copy; <a href="https://www.openstreetmap.org/copyright" target="_blank">OpenStreetMap</a> &copy; <a href="https://cartodb.com/attributions" target="_blank">CartoDB</a>'})),!0!==this.options.enableClusters||void 0!==L.markerClusterGroup||(this.setLog('Missing "markerClusterGroup" library.',"error"),!1))},init:function(){this.map=L.map(this.elements.container.attr("id"),this.options.map),this.options.center=new L.LatLng(this.options.map.center[0],this.options.map.center[1]),this.setTileLayer(),this.setView(),this.loadMarkerIcon()},update:function(){return this.options.autoCenter&&this.fitBounds(),this.leaflet().invalidateSize(),this},setView:function(){return this.leaflet().setView(this.options.map.center,this.options.map.zoom),this.leaflet().zoomControl.setPosition(this.options.map.zoomPosition),this},setTileLayer:function(){return this.options.tileLayer.addTo(this.leaflet()),this},setCenter:function(t){return"object"!=typeof t?this.setLog("Center must be an indexed array.","error"):(this.options.map.center=t,this.options.center=new L.LatLng(this.options.map.center[0],this.options.map.center[1]),this.update()),this},setZoom:function(t){return this.options.map.zoom=t,this.update()},setMapOptions:function(t){return"object"!=typeof t?(this.setLog("Options must be an object.","error"),this):(r.extend(!0,this.options.map,t),r.extend(!0,this.leaflet().options,t),this.update())},fitBounds:function(){var o;return!0!==this.options.autoCenter||r.isEmptyObject(this.groups)||(o=L.latLngBounds(),r.each(this.getGroups(),function(t,e){"marker_cluster"!==e.type&&e.layer.getBounds().isValid()&&o.extend(e.layer.getBounds())}),this.clusterIsEnabled()&&o.extend(this.getCluster().getBounds()),this.leaflet().fitBounds(o,this.options.boundsOptions)),this},getGroups:function(){return this.groups},getGroup:function(t){return void 0!==this.groups[t]?this.groups[t]:null},initGroup:function(t,e){return null===this.getGroup(t)&&(this.groups[t]={layer:new L.FeatureGroup,children:[],type:e},this.leaflet().addLayer(this.groups[t].layer)),this.groups[t]},removeGroup:function(t,e){var o=this.getGroup(t=t||"default");return null!==o&&(this.clusterIsEnabled()&&this.markers.cluster.removeLayers(o.children),this.leaflet().removeLayer(o.layer),delete this.groups[t],!0===e&&this.update()),this},removeGroups:function(t){var o=this;return r.each(o.getGroups(),function(t,e){o.leaflet().removeLayer(e.layer)}),o.groups={},void 0!==this.markers.cluster&&(o.leaflet().removeLayer(o.markers.cluster),o.markers.cluster=void 0),!0===t&&o.update(),o},addMarkers:function(t,e,o){o=o||"default",void 0!==(e=e||{}).replace&&!0===e.replace&&this.removeGroup(o,!1),!0===this.options.enableClusters&&void 0===this.markers.cluster&&this.initCluster(),this.initGroup(o,this.clusterIsEnabled()?"marker_cluser":"marker");for(var s=0,i=t.length;s<i;s++){t[s].cluster=this.getCluster();var n=new r.SmapMarker(t[s],this.markers.iconInterface);this.groups[o].children.push(n.getLayer()),this.clusterIsEnabled()||this.groups[o].layer.addLayer(n.getLayer())}return this.clusterIsEnabled()&&this.markers.cluster.addLayers(this.groups[o].children),0<i?this.update():this},addShapes:function(t,e,o){o=o||"default",void 0!==(e=e||{}).replace&&!0===e.replace&&this.removeGroup(o,!1),this.initGroup(o,"shapes");for(var s=0,i=t.length;s<i;s++){var n=new r.SmapShape(t[s]);this.groups[o].children.push(n.getLayer()),this.groups[o].layer.addLayer(n.getLayer())}return 0<i?this.update():this},initCluster:function(){var t=r.extend(!0,{removeOutsideVisibleBounds:!0},this.options.clusterOptions);return this.markers.cluster=L.markerClusterGroup(t),this.leaflet().addLayer(this.markers.cluster),this},getCluster:function(){return this.markers.cluster},clusterIsEnabled:function(){return void 0!==this.markers.cluster},loadMarkerIcon:function(){this.markers.iconInterface=L.DivIcon.extend({createIcon:function(t){var e=L.DivIcon.prototype.createIcon.call(this,t);if(this.options.data)for(var o in this.options.data)e.dataset[o]=this.options.data[o];return e}})},setLog:function(t,e){e=e||"log",console[e]("Smap: "+t)},leaflet:function(){return this.map}},r.fn.smap=function(t){return new r.Smap(r(this),t)}}(jQuery);